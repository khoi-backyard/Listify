fastlane_version "2.23.0"

default_platform :ios

platform :ios do

  before_all do
    unless ENV['CRASHLYTICS_API_TOKEN'] && ENV['CRASHLYTICS_BUILD_SECRET']
      puts 'ERR: Export the variables CRASHLYTICS_API_TOKEN and CRASHLYTICS_BUILD_SECRET'
      exit 1
    end

    if is_ci && (!ENV['KEYCHAIN_NAME'] || !ENV['KEYCHAIN_PASSWORD'])
      puts 'ERR: Export the variables KEYCHAIN_NAME and KEYCHAIN_PASSWORD'  
    end

    CRASHLYTICS_API_TOKEN = ENV['CRASHLYTICS_API_TOKEN']
    CRASHLYTICS_BUILD_SECRET = ENV['CRASHLYTICS_BUILD_SECRET']

    KEYCHAIN_NAME = ENV['KEYCHAIN_NAME'] || "login"
    KEYCHAIN_PASSWORD = ENV['KEYCHAIN_PASSWORD']

    SCHEME_NAME = "Listify"
    APP_BUNDLE_IDENTIFIER = "io.khoi.Listify"

    if is_ci
      setup_jenkins
      setup_ci_env
    end
  end

  desc "Submit build to crashlytics"
  lane :beta do
    cocoapods

    commit_hash = last_git_commit[:abbreviated_commit_hash]
    version_number = get_version_number(target: SCHEME_NAME)
    version_metadata = "-live+#{git_branch}.#{commit_hash}"
    version_number << version_metadata unless version_number.end_with?(version_metadata)

    increment_version_number :version_number => version_number
    increment_build_number :build_number => number_of_commits

    fetch_certificates_provs
    
    gym :scheme => SCHEME_NAME

    # Upload the build to Crashlytics.
    crashlytics(
      api_token: CRASHLYTICS_API_TOKEN,
      build_secret: CRASHLYTICS_BUILD_SECRET,
      notes: last_git_commit[:message],
      groups: ["beta-testers"]
    )

    upload_symbols_to_crashlytics
  end

  lane :fetch_certificates_provs do
    match(
      app_identifier: APP_BUNDLE_IDENTIFIER, 
      type: "development",
      keychain_name: KEYCHAIN_NAME,
      keychain_password: KEYCHAIN_PASSWORD,
      readonly: true
    )

    match(
      app_identifier: APP_BUNDLE_IDENTIFIER, 
      type: "adhoc",
      keychain_name: KEYCHAIN_NAME,
      keychain_password: KEYCHAIN_PASSWORD,
      readonly: true
    )

    match(
      app_identifier: APP_BUNDLE_IDENTIFIER, 
      type: "appstore",
      keychain_name: KEYCHAIN_NAME,
      keychain_password: KEYCHAIN_PASSWORD,
      readonly: true
    )
  end

  private_lane :setup_ci_env do
    create_keychain(
      name: KEYCHAIN_NAME,
      password: KEYCHAIN_PASSWORD,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true
    )
  end
  
  #After All
  after_all do |lane|
    notification(subtitle: "Success", message: "Lane #{lane} completed successfully!")
  end

  #Error handling
  error do |lane, exception|
    clean_build_artifacts
    puts "\n(╯°□°）╯︵ ┻━┻\n".red
    notification(subtitle: "Failed", message: "Lane #{lane} failed to complete.")
  end

end
